{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\cedri\\\\Desktop\\\\Repositories\\\\Budgeteer\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\cedri\\\\Desktop\\\\Repositories\\\\Budgeteer\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\cedri\\\\Desktop\\\\Repositories\\\\Budgeteer\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\cedri\\\\Desktop\\\\Repositories\\\\Budgeteer\\\\client\\\\src\\\\App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport ExpenseForm from \"./components/ExpenseForm\";\nimport ExpenseList from \"./components/ExpenseList\";\nimport IncomeForm from \"./components/IncomeForm\";\nimport IncomeList from \"./components/IncomeList\";\nimport Alert from \"./components/Alert\";\nimport uuid from \"uuid/v4\";\nimport 'bootstrap/dist/css/bootstrap.min.css'; // const initialExpenses = [\n//   { id: uuid(), charge: \"rent\", amount: 1600 },\n//   { id: uuid(), charge: \"car payment\", amount: 400 },\n//   {\n//     id: uuid(),\n//     charge: \"credit card bill \",\n//     amount: 1200\n//   }\n// ];\n\nvar initialExpenses = localStorage.getItem(\"expenses\") ? JSON.parse(localStorage.getItem(\"expenses\")) : [];\nvar initialIncome = localStorage.getItem(\"income\") ? JSON.parse(localStorage.getItem(\"income\")) : [];\n\nfunction App() {\n  // all expenses, add expense\n  var _useState = useState(initialExpenses),\n      _useState2 = _slicedToArray(_useState, 2),\n      expenses = _useState2[0],\n      setExpenses = _useState2[1]; // single expense\n\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      charge = _useState4[0],\n      setCharge = _useState4[1]; // all income, add income\n\n\n  var _useState5 = useState(initialIncome),\n      _useState6 = _slicedToArray(_useState5, 2),\n      income = _useState6[0],\n      setIncome = _useState6[1]; // single earning\n\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      earning = _useState8[0],\n      setEarning = _useState8[1]; // single expense amount\n\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      expenseAmount = _useState10[0],\n      setExpenseAmount = _useState10[1]; // single income amount\n\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      incomeAmount = _useState12[0],\n      setIncomeAmount = _useState12[1]; // alert\n\n\n  var _useState13 = useState({\n    show: false\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      alert = _useState14[0],\n      setAlert = _useState14[1]; // edit\n\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      expenseEdit = _useState16[0],\n      setExpenseEdit = _useState16[1]; // edit\n\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      incomeEdit = _useState18[0],\n      setIncomeEdit = _useState18[1]; // id\n\n\n  var _useState19 = useState(0),\n      _useState20 = _slicedToArray(_useState19, 2),\n      id = _useState20[0],\n      setId = _useState20[1]; //useEffects (hooks)\n  // useEffect(() => {\n  //   console.log(\"called\");\n  //   localStorage.setItem(\"expenses\", JSON.stringify(expenses));\n  // }, [expenses]);\n  // useEffect(() => {\n  //   console.log(\"called\");\n  //   localStorage.setItem(\"income\", JSON.stringify(income));\n  // }, [income]);\n  // *********** functionality **************\n  //add charge\n\n\n  var handleCharge = function handleCharge(e) {\n    setCharge(e.target.value);\n  }; //add earning\n\n\n  var handleEarning = function handleEarning(e) {\n    setEarning(e.target.value);\n  }; // add Expense Amount\n\n\n  var handleExpenseAmount = function handleExpenseAmount(e) {\n    var expenseAmount = e.target.value;\n\n    if (expenseAmount === \"\") {\n      setExpenseAmount(expenseAmount);\n    } else {\n      setExpenseAmount(parseInt(expenseAmount));\n    }\n  }; // add Income Amount\n\n\n  var handleIncomeAmount = function handleIncomeAmount(e) {\n    var incomeAmount = e.target.value;\n\n    if (incomeAmount === \"\") {\n      setIncomeAmount(incomeAmount);\n    } else {\n      setIncomeAmount(parseInt(incomeAmount));\n    }\n  }; // handle alert\n\n\n  var handleAlert = function handleAlert(_ref) {\n    var type = _ref.type,\n        text = _ref.text;\n    setAlert({\n      show: true,\n      type: type,\n      text: text\n    });\n    setTimeout(function () {\n      setAlert({\n        show: false\n      });\n    }, 7000);\n  }; // handle submit for expenses\n\n\n  var handleSubmitExpenses = function handleSubmitExpenses(e) {\n    console.log(\"passedsubmit1\");\n    e.preventDefault();\n\n    if (charge !== \"\" && expenseAmount > 0) {\n      console.log(\"first if statement true\");\n\n      if (expenseEdit) {\n        console.log(\"second if statement\");\n        var tempExpenses = expenses.map(function (item) {\n          return item.id === id ? _objectSpread({}, item, {\n            charge: charge,\n            expenseAmount: expenseAmount\n          }) : item;\n        });\n        setExpenses(tempExpenses); // LOCAL STORAGE EXPENSES\n\n        localStorage.setItem(\"expenses\", JSON.stringify(expenses));\n        handleAlert({\n          type: \"success\",\n          text: \"item added\"\n        });\n        setExpenseEdit(false);\n      } else {\n        console.log(\"else statement true\");\n        var singleExpense = {\n          id: uuid(),\n          charge: charge,\n          expenseAmount: expenseAmount\n        };\n        setExpenses([].concat(_toConsumableArray(expenses), [singleExpense])); // LOCAL STORAGE EXPENSES\n\n        localStorage.setItem(\"expenses\", JSON.stringify(expenses));\n        handleAlert({\n          type: \"success\",\n          text: \"item added\"\n        });\n      } // set charge back to empty string\n\n\n      setCharge(\"\"); // set amount back to zero\n\n      setExpenseAmount(\"\");\n    } else {\n      console.log(\"alert success\");\n      handleAlert({\n        type: \"danger\",\n        text: \"charge can't be empty value and amount value has to be bigger than zero\"\n      });\n    }\n  }; // handle submit for income\n\n\n  var handleSubmitIncome = function handleSubmitIncome(e) {\n    e.preventDefault();\n\n    if (earning !== \"\" && incomeAmount > 0) {\n      if (incomeEdit) {\n        var tempIncome = income.map(function (item) {\n          return item.id === id ? _objectSpread({}, item, {\n            earning: earning,\n            incomeAmount: incomeAmount\n          }) : item;\n        });\n        setIncome(tempIncome); // LOCAL STORAGE INCOME\n\n        localStorage.setItem(\"income\", JSON.stringify(income));\n        handleAlert({\n          type: \"success\",\n          text: \"item added\"\n        });\n        setIncomeEdit(false);\n      } else {\n        var singleIncome = {\n          id: uuid(),\n          earning: earning,\n          incomeAmount: incomeAmount\n        };\n        setExpenses([].concat(_toConsumableArray(income), [singleIncome])); // LOCAL STORAGE INCOME\n\n        localStorage.setItem(\"income\", JSON.stringify(income));\n        handleAlert({\n          type: \"success\",\n          text: \"item added\"\n        });\n      } // set charge back to empty string\n\n\n      setEarning(\"\"); // set amount back to zero\n\n      setIncomeAmount(\"\");\n    } else {\n      handleAlert({\n        type: \"danger\",\n        text: \"earning can't be empty value and amount value has to be bigger than zero\"\n      });\n    }\n  }; // handle expense delete\n\n\n  var handleDeleteExpense = function handleDeleteExpense(id) {\n    var tempExpenses = expenses.filter(function (item) {\n      return item.id !== id;\n    });\n    setExpenses(tempExpenses);\n    handleAlert({\n      type: \"danger\",\n      text: \"item deleted\"\n    });\n  }; // handle income delete\n\n\n  var handleDeleteIncome = function handleDeleteIncome(id) {\n    var tempIncome = income.filter(function (item) {\n      return item.id !== id;\n    });\n    setExpenses(tempIncome);\n    handleAlert({\n      type: \"danger\",\n      text: \"item deleted\"\n    });\n  }; //clear all expense items\n\n\n  var clearExpenseItems = function clearExpenseItems() {\n    setExpenses([]);\n  }; //clear all income items\n\n\n  var clearIncomeItems = function clearIncomeItems() {\n    setIncome([]);\n  }; // handle expense edit\n\n\n  var handleExpenseEdit = function handleExpenseEdit(id) {\n    var expense = expenses.find(function (item) {\n      return item.id === id;\n    });\n    var charge = expense.charge,\n        expenseAmount = expense.expenseAmount;\n    setCharge(charge);\n    setExpenseAmount(expenseAmount);\n    setExpenseEdit(true);\n    setId(id);\n  }; // handle income edit\n\n\n  var handleIncomeEdit = function handleIncomeEdit(id) {\n    var singleincome = income.find(function (item) {\n      return item.id === id;\n    });\n    var earning = singleincome.earning,\n        incomeAmount = singleincome.incomeAmount;\n    setEarning(earning);\n    setIncomeAmount(incomeAmount);\n    setIncomeEdit(true);\n    setId(id);\n  };\n\n  return React.createElement(React.Fragment, null, alert.show && React.createElement(Alert, {\n    type: alert.type,\n    text: alert.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"Budgeteer ! \"), React.createElement(\"main\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(ExpenseForm, {\n    handleSubmitExpenses: handleSubmitExpenses,\n    charge: charge,\n    handleCharge: handleCharge,\n    expenseAmount: expenseAmount,\n    handleExpenseAmount: handleExpenseAmount,\n    expenseEdit: expenseEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), React.createElement(ExpenseList, {\n    expenses: expenses,\n    handleDeleteExpense: handleDeleteExpense,\n    handleExpenseEdit: handleExpenseEdit,\n    clearExpenseItems: clearExpenseItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  }, \"Total Spending :\", React.createElement(\"span\", {\n    className: \"total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, \"$\", expenses.reduce(function (acc, curr) {\n    return acc += curr.expenseAmount;\n  }, 0))), React.createElement(IncomeForm, {\n    handleSubmitIncome: handleSubmitIncome,\n    earning: earning,\n    handleEarning: handleEarning,\n    incomeAmount: incomeAmount,\n    handleIncomeAmount: handleIncomeAmount,\n    incomeEdit: incomeEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }), React.createElement(IncomeList, {\n    income: income,\n    handleDeleteIncome: handleDeleteIncome,\n    handleIncomeEdit: handleIncomeEdit,\n    clearIncomeItems: clearIncomeItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, \"Total Income :\", React.createElement(\"span\", {\n    className: \"total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, \"$\", income.reduce(function (acc, curr) {\n    return acc += curr.incomeAmount;\n  }, 0)))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/cedri/Desktop/Repositories/Budgeteer/client/src/App.js"],"names":["React","useState","ExpenseForm","ExpenseList","IncomeForm","IncomeList","Alert","uuid","initialExpenses","localStorage","getItem","JSON","parse","initialIncome","App","expenses","setExpenses","charge","setCharge","income","setIncome","earning","setEarning","expenseAmount","setExpenseAmount","incomeAmount","setIncomeAmount","show","alert","setAlert","expenseEdit","setExpenseEdit","incomeEdit","setIncomeEdit","id","setId","handleCharge","e","target","value","handleEarning","handleExpenseAmount","parseInt","handleIncomeAmount","handleAlert","type","text","setTimeout","handleSubmitExpenses","console","log","preventDefault","tempExpenses","map","item","setItem","stringify","singleExpense","handleSubmitIncome","tempIncome","singleIncome","handleDeleteExpense","filter","handleDeleteIncome","clearExpenseItems","clearIncomeItems","handleExpenseEdit","expense","find","handleIncomeEdit","singleincome","reduce","acc","curr"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport ExpenseForm from \"./components/ExpenseForm\";\nimport ExpenseList from \"./components/ExpenseList\";\nimport IncomeForm from \"./components/IncomeForm\";\nimport IncomeList from \"./components/IncomeList\";\nimport Alert from \"./components/Alert\";\nimport uuid from \"uuid/v4\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n// const initialExpenses = [\n//   { id: uuid(), charge: \"rent\", amount: 1600 },\n//   { id: uuid(), charge: \"car payment\", amount: 400 },\n//   {\n//     id: uuid(),\n//     charge: \"credit card bill \",\n//     amount: 1200\n//   }\n// ];\nconst initialExpenses = localStorage.getItem(\"expenses\")\n  ? JSON.parse(localStorage.getItem(\"expenses\"))\n  : [];\nconst initialIncome = localStorage.getItem(\"income\")\n  ? JSON.parse(localStorage.getItem(\"income\"))\n  : [];\nfunction App() {\n  // all expenses, add expense\n  const [expenses, setExpenses] = useState(initialExpenses);\n  // single expense\n  const [charge, setCharge] = useState(\"\");\n  // all income, add income\n  const [income, setIncome] = useState(initialIncome);\n  // single earning\n  const [earning, setEarning] = useState(\"\");\n  // single expense amount\n  const [expenseAmount, setExpenseAmount] = useState(\"\");\n   // single income amount\n   const [incomeAmount, setIncomeAmount] = useState(\"\");\n  // alert\n  const [alert, setAlert] = useState({ show: false });\n  // edit\n  const [expenseEdit, setExpenseEdit] = useState(false);\n  // edit\n  const [incomeEdit, setIncomeEdit] = useState(false);\n  // id\n  const [id, setId] = useState(0);\n\n  //useEffects (hooks)\n  // useEffect(() => {\n  //   console.log(\"called\");\n\n  //   localStorage.setItem(\"expenses\", JSON.stringify(expenses));\n  // }, [expenses]);\n\n  // useEffect(() => {\n  //   console.log(\"called\");\n\n  //   localStorage.setItem(\"income\", JSON.stringify(income));\n  // }, [income]);\n\n  // *********** functionality **************\n  //add charge\n  const handleCharge = e => {\n    setCharge(e.target.value);\n  };\n  //add earning\n  const handleEarning = e => {\n    setEarning(e.target.value);\n  };\n  // add Expense Amount\n  const handleExpenseAmount = e => {\n    let expenseAmount = e.target.value;\n    if (expenseAmount === \"\") {\n      setExpenseAmount(expenseAmount);\n    } else {\n      setExpenseAmount(parseInt(expenseAmount));\n    }\n  };\n\n  // add Income Amount\n  const handleIncomeAmount = e => {\n    let incomeAmount = e.target.value;\n    if (incomeAmount === \"\") {\n      setIncomeAmount(incomeAmount);\n    } else {\n      setIncomeAmount(parseInt(incomeAmount));\n    }\n  };\n\n  // handle alert\n  const handleAlert = ({ type, text }) => {\n    setAlert({ show: true, type, text });\n    setTimeout(() => {\n      setAlert({ show: false });\n    }, 7000);\n  };\n  // handle submit for expenses\n  const handleSubmitExpenses = e => {\n    console.log(\"passedsubmit1\")\n    e.preventDefault();\n    if (charge !== \"\" && expenseAmount > 0) {\n      console.log(\"first if statement true\")\n      if (expenseEdit) {\n        console.log(\"second if statement\")\n        let tempExpenses = expenses.map(item => {\n          return item.id === id ? { ...item, charge, expenseAmount } : item;\n        });\n        setExpenses(tempExpenses);\n        // LOCAL STORAGE EXPENSES\n        localStorage.setItem(\"expenses\", JSON.stringify(expenses));\n        handleAlert({ type: \"success\", text: \"item added\" });\n        setExpenseEdit(false);\n      } else {\n        console.log(\"else statement true\")\n        const singleExpense = { id: uuid(), charge, expenseAmount };\n        setExpenses([...expenses, singleExpense]);\n        // LOCAL STORAGE EXPENSES\n        localStorage.setItem(\"expenses\", JSON.stringify(expenses));\n        handleAlert({ type: \"success\", text: \"item added\" });\n      }\n      // set charge back to empty string\n      setCharge(\"\");\n      // set amount back to zero\n      setExpenseAmount(\"\");\n    } else {\n      console.log(\"alert success\")\n      handleAlert({\n        type: \"danger\",\n        text: `charge can't be empty value and amount value has to be bigger than zero`\n      });\n    }\n  };\n  // handle submit for income\n  const handleSubmitIncome = e => {\n    e.preventDefault();\n    if (earning !== \"\" && incomeAmount > 0) {\n      if (incomeEdit) {\n        let tempIncome = income.map(item => {\n          return item.id === id ? { ...item, earning, incomeAmount } : item;\n        });\n        setIncome(tempIncome);\n        // LOCAL STORAGE INCOME\n        localStorage.setItem(\"income\", JSON.stringify(income));\n        handleAlert({ type: \"success\", text: \"item added\" });\n        setIncomeEdit(false);\n      } else {\n        const singleIncome = { id: uuid(), earning, incomeAmount };\n        setExpenses([...income, singleIncome]);\n        // LOCAL STORAGE INCOME\n        localStorage.setItem(\"income\", JSON.stringify(income));\n        handleAlert({ type: \"success\", text: \"item added\" });\n      }\n      // set charge back to empty string\n      setEarning(\"\");\n      // set amount back to zero\n      setIncomeAmount(\"\");\n    } else {\n      handleAlert({\n        type: \"danger\",\n        text: `earning can't be empty value and amount value has to be bigger than zero`\n      });\n    }\n  };\n  // handle expense delete\n  const handleDeleteExpense = id => {\n    let tempExpenses = expenses.filter(item => item.id !== id);\n    setExpenses(tempExpenses);\n    handleAlert({ type: \"danger\", text: \"item deleted\" });\n  };\n  // handle income delete\n  const handleDeleteIncome = id => {\n    let tempIncome = income.filter(item => item.id !== id);\n    setExpenses(tempIncome);\n    handleAlert({ type: \"danger\", text: \"item deleted\" });\n  };\n  //clear all expense items\n  const clearExpenseItems = () => {\n    setExpenses([]);\n  };\n  //clear all income items\n  const clearIncomeItems = () => {\n    setIncome([]);\n  };\n  // handle expense edit\n  const handleExpenseEdit = id => {\n    let expense = expenses.find(item => item.id === id);\n    let { charge, expenseAmount } = expense;\n    setCharge(charge);\n    setExpenseAmount(expenseAmount);\n    setExpenseEdit(true);\n    setId(id);\n  };\n  // handle income edit\n  const handleIncomeEdit = id => {\n    let singleincome = income.find(item => item.id === id);\n    let { earning, incomeAmount } = singleincome;\n    setEarning(earning);\n    setIncomeAmount(incomeAmount);\n    setIncomeEdit(true);\n    setId(id);\n  };\n\n  return (\n    <>\n      {alert.show && <Alert type={alert.type} text={alert.text} />}\n      <h1>Budgeteer ! </h1>\n      <main className=\"App\">\n        <ExpenseForm\n          handleSubmitExpenses={handleSubmitExpenses}\n          charge={charge}\n          handleCharge={handleCharge}\n          expenseAmount={expenseAmount}\n          handleExpenseAmount={handleExpenseAmount}\n          expenseEdit={expenseEdit}\n        />\n        <ExpenseList\n          expenses={expenses}\n          handleDeleteExpense={handleDeleteExpense}\n          handleExpenseEdit={handleExpenseEdit}\n          clearExpenseItems={clearExpenseItems}\n        />\n        <h1>\n        Total Spending :\n        <span className=\"total\">\n          $\n          {expenses.reduce((acc, curr) => {\n            return (acc += curr.expenseAmount);\n          }, 0)}\n        </span>\n      </h1>\n        <IncomeForm\n          handleSubmitIncome={handleSubmitIncome}\n          earning={earning}\n          handleEarning={handleEarning}\n          incomeAmount={incomeAmount}\n          handleIncomeAmount={handleIncomeAmount}\n          incomeEdit={incomeEdit}\n        />\n        <IncomeList\n          income={income}\n          handleDeleteIncome={handleDeleteIncome}\n          handleIncomeEdit={handleIncomeEdit}\n          clearIncomeItems={clearIncomeItems}\n        />\n        <h1>\n        Total Income :\n        <span className=\"total\">\n          $\n          {income.reduce((acc, curr) => {\n            return (acc += curr.incomeAmount);\n          }, 0)}\n        </span>\n      </h1>\n      </main>\n      \n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}